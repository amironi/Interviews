
1. Run the ElaborateDeadlock.exe application.

2. Attach WinDbg and inspect the application's threads. Use ~* and kb to see the handles the threads are waiting for and pass them to the !handle command.

3. Let the application continue running using the 'g' command or clicking F5.

4. Open another WinDbg instance and enter local kernel debugging (File-->Kernel Debug-->Local). If this doesn't work, you will need to run the Sysinternals LiveKD tool from an Administrator command prompt:

	LiveKD -w

(You might need to copy Dbghelp.dll from the Debugging Tools for Windows directory to the directory where LiveKD resides.)

5. Use the !process 0 0 command to find all processes, specifically locate the address of the ElaborateDeadlock.exe process.

6. Pass that address to !process and inspect the output -- you can see what the application's threads are waiting for. Use the !thread command to inspect thread pointers (correlate with the user-mode debugger opened in step 2) and the !object command to inspect synchronization objects.

7. (OPTIONAL) Use the dt nt!_DISPATCHER_HEADER command and pass to it the address of any synchronization object. Traverse the wait list to see _KWAIT_BLOCK structures.

(on >=Vista machines)
8. Use Wait Chain Traversal (the debugging extension supplied by the instructor) to diagnose the problem. After loading the extension DLL, use !wct for a system-wide analysis or !wct_thread for a specific thread's wait chain.